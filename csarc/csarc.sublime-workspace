{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"percent",
				"percentPerTick"
			],
			[
				"Gra",
				"GradientCommand"
			],
			[
				"Move",
				"moveList	statement"
			],
			[
				"vl",
				"validCoords"
			],
			[
				"move",
				"move	forstmt"
			],
			[
				"E",
				"Exception	class"
			],
			[
				"try",
				"try	Try/Except"
			],
			[
				"visit",
				"visited	param"
			],
			[
				"a",
				"add	function"
			],
			[
				"valid",
				"validMoves	statement"
			],
			[
				"e",
				"e	trystmt"
			],
			[
				"node",
				"node	param"
			],
			[
				"b",
				"balanced	function"
			],
			[
				"balance",
				"balanced_f"
			],
			[
				"bal",
				"balance_factor"
			],
			[
				"ro",
				"rotate_right	function"
			],
			[
				"left",
				"left"
			],
			[
				"key",
				"key	param"
			],
			[
				"v",
				"values	function"
			],
			[
				"sort",
				"sorted_key_vals	statement"
			],
			[
				"in",
				"inputParameter"
			]
		]
	},
	"buffers":
	[
		{
			"file": "csarc.ino",
			"settings":
			{
				"buffer_size": 15254,
				"line_ending": "Windows"
			}
		},
		{
			"file": "GradientCommand.h",
			"settings":
			{
				"buffer_size": 964,
				"line_ending": "Windows"
			}
		},
		{
			"file": "GradientState.h",
			"settings":
			{
				"buffer_size": 717,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Typedefs.h",
			"settings":
			{
				"buffer_size": 314,
				"line_ending": "Windows"
			}
		},
		{
			"file": "GradientState.cpp",
			"settings":
			{
				"buffer_size": 2910,
				"line_ending": "Windows"
			}
		},
		{
			"file": "GradientCommand.cpp",
			"settings":
			{
				"buffer_size": 1917,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Gabe/Documents/GitHub/csarc/.gitignore",
			"settings":
			{
				"buffer_size": 380,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 588.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"enabale",
				"Package Control: Enable Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"gitgutter",
				"GitGutter: Show Comparing Against"
			],
			[
				"bu",
				"Build With: Python"
			],
			[
				"build",
				"Build With: Python"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 600.0
	},
	"console":
	{
		"height": 186.0,
		"history":
		[
			"'",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/Gabe/Documents/GitHub/assassain-trainer/.gitignore",
		"/C/Users/Gabe/Desktop/pytests/main.py",
		"/C/Users/Gabe/Desktop/pytests/ChildBlock.py",
		"/C/Users/Gabe/Desktop/pytests/ChildGenerator.py",
		"/C/Users/Gabe/Desktop/pytests/Block.py",
		"/C/Users/Gabe/Desktop/sandbox.py",
		"/C/Users/Gabe/Desktop/sandbox2.py",
		"/C/Users/Gabe/Desktop/sandbox3.py",
		"/C/Users/Gabe/Documents/GitHub/csarc/csarc/GradientState.cpp",
		"/C/Users/Gabe/Documents/GitHub/csarc/csarc/GradientCommand.cpp",
		"/C/Users/Gabe/Documents/GitHub/csarc/csarc/Typedefs.h",
		"/C/Users/Gabe/Documents/GitHub/csarc/csarc/GradientState.h",
		"/C/Users/Gabe/Documents/GitHub/csarc/csarc/GradientCommand.h",
		"/C/Users/Gabe/Documents/GitHub/csarc/csarc/csarc.ino",
		"/C/Users/Gabe/Documents/GitHub/csarc/.pioenvs/uno/libTimedAction.a",
		"/C/Users/Gabe/AppData/Roaming/Sublime Text 3/Packages/Deviot/DeviotStarter.py",
		"/C/Users/Gabe/AppData/Roaming/Sublime Text 3/Packages/Deviot/CHANGES.md",
		"/C/Users/Gabe/AppData/Roaming/Sublime Text 3/Packages/Deviot/Docs/Private_Library.md",
		"/C/Users/Gabe/AppData/Roaming/Sublime Text 3/Packages/Deviot/Settings-Default/Main.sublime-menu",
		"/C/Users/Gabe/AppData/Roaming/Sublime Text 3/Packages/Deviot/Settings-Default/Deviot Preferences.sublime-settings",
		"/C/Users/Gabe/AppData/Roaming/Sublime Text 3/Packages/Deviot/README.md",
		"/C/Users/Gabe/AppData/Roaming/Sublime Text 3/Packages/Deviot/Settings-Default/Default (Windows).sublime-keymap",
		"/C/Users/Gabe/AppData/Roaming/Sublime Text 3/Packages/User/Deviot/Deviot Preferences.sublime-settings",
		"/C/Users/Gabe/AppData/Roaming/Sublime Text 3/Packages/User/Arduino.sublime-settings",
		"/C/Users/Gabe/Desktop/331/hashtable_tests.py",
		"/C/Users/Gabe/Desktop/331/Hashtable.py",
		"/C/Users/Gabe/Desktop/331/q1.py",
		"/C/Users/Gabe/Documents/Arduino/test/test.ino",
		"/C/Users/Gabe/.platformio/packages/framework-arduinoavr/libraries/LiquidCrystal/examples/Blink/Blink.ino",
		"/C/Users/Gabe/.platformio/packages/framework-arduinoavr/libraries/SoftwareSerial/examples/SoftwareSerialExample/SoftwareSerialExample.ino",
		"/C/Users/Gabe/AppData/Local/Temp/Deviot/csarc/platformio.ini",
		"/C/Users/Gabe/Desktop/331/AVLTree.py",
		"/C/Users/Gabe/Desktop/331/AVLTreeTemp.py",
		"/C/Users/Gabe/Desktop/mazetest.py",
		"/C/Users/Gabe/Desktop/331/BSTreeTemp.py",
		"/C/Users/Gabe/Desktop/331/BSTreeTests.py",
		"/C/Users/Gabe/AppData/Roaming/Sublime Text 3/Packages/User/Anaconda.sublime-settings",
		"/C/Users/Gabe/Desktop/tests.py",
		"/C/Users/Gabe/Desktop/BSTree.py",
		"/C/Users/Gabe/Documents/GitHub/csarc/csarc/test.py",
		"/C/Users/Gabe/AppData/Roaming/Sublime Text 3/Packages/User/Package Control.sublime-settings"
	],
	"find":
	{
		"height": 50.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"memcpy",
			"build",
			"processGradient",
			"GradientState",
			"processColor",
			"processGradient",
			"testcase",
			"testCase",
			"y "
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"GradientStateStruct",
			"processColorFromBuffer"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "csarc.ino",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15254,
						"regions":
						{
						},
						"selection":
						[
							[
								2667,
								2667
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/Deviot/Arduino.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 993.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "GradientCommand.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 964,
						"regions":
						{
						},
						"selection":
						[
							[
								52,
								52
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "GradientState.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 717,
						"regions":
						{
						},
						"selection":
						[
							[
								317,
								317
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Typedefs.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 314,
						"regions":
						{
						},
						"selection":
						[
							[
								313,
								313
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 4,
					"file": "GradientState.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2910,
						"regions":
						{
						},
						"selection":
						[
							[
								613,
								613
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "GradientCommand.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1917,
						"regions":
						{
						},
						"selection":
						[
							[
								459,
								459
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/C/Users/Gabe/Documents/GitHub/csarc/.gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 380,
						"regions":
						{
						},
						"selection":
						[
							[
								380,
								380
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 142.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.531770833333,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.Deviot|Build1461535241.050944":
	{
		"height": 148.0
	},
	"output.Deviot|Build1461535587.963316":
	{
		"height": 148.0
	},
	"output.Deviot|Build1461587077.175626":
	{
		"height": 148.0
	},
	"output.Deviot|Build1461587085.062303":
	{
		"height": 148.0
	},
	"output.Deviot|Build1461587168.786116":
	{
		"height": 148.0
	},
	"output.Deviot|Build1461587212.74368":
	{
		"height": 158.0
	},
	"output.Deviot|Build1461931931.70134":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462363302.214031":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462363941.24392":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462363990.369281":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462364008.96273":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462364047.404314":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462364052.871381":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462364116.996133":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462376593.544122":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462376597.772194":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462402495.161722":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462402610.009236":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462402615.366364":
	{
		"height": 758.0
	},
	"output.Deviot|Build1462565219.356631":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462565222.759062":
	{
		"height": 173.0
	},
	"output.Deviot|Build1462566237.217928":
	{
		"height": 798.0
	},
	"output.Deviot|Build1462566395.884937":
	{
		"height": 84.0
	},
	"output.Deviot|Build1462744153.340143":
	{
		"height": 428.0
	},
	"output.Deviot|Build1462745759.054098":
	{
		"height": 336.0
	},
	"output.Deviot|Build1462750564.369484":
	{
		"height": 383.0
	},
	"output.Deviot|Build1462795577.801291":
	{
		"height": 401.0
	},
	"output.Deviot|Build1462837944.571588":
	{
		"height": 230.0
	},
	"output.Deviot|Build1462838648.481742":
	{
		"height": 224.0
	},
	"output.Deviot|Build1462838725.141403":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462838728.333297":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462838736.753276":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462838777.278127":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462838795.18053":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462838862.317411":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462838875.623494":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462838924.492979":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462838927.988227":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462839862.000291":
	{
		"height": 450.0
	},
	"output.Deviot|Build1462839933.723266":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462839948.161845":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462839954.72682":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462839975.523239":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462839992.539369":
	{
		"height": 272.0
	},
	"output.Deviot|Build1462840122.155141":
	{
		"height": 373.0
	},
	"output.Deviot|Build1462840211.267349":
	{
		"height": 398.0
	},
	"output.Deviot|Build1462840259.411382":
	{
		"height": 405.0
	},
	"output.Deviot|Build1462840347.006919":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462840420.354229":
	{
		"height": 292.0
	},
	"output.Deviot|Build1462840453.121085":
	{
		"height": 474.0
	},
	"output.Deviot|Build1462840519.21216":
	{
		"height": 419.0
	},
	"output.Deviot|Build1462840563.970642":
	{
		"height": 591.0
	},
	"output.Deviot|Build1462840664.802663":
	{
		"height": 607.0
	},
	"output.Deviot|Build1462840690.804208":
	{
		"height": 449.0
	},
	"output.Deviot|Build1462840743.210686":
	{
		"height": 676.0
	},
	"output.Deviot|Build1462840788.457171":
	{
		"height": 148.0
	},
	"output.Deviot|Build1462841154.606986":
	{
		"height": 33.0
	},
	"output.Deviot|Build1462880837.417235":
	{
		"height": 138.0
	},
	"output.Deviot|Build1462880904.358878":
	{
		"height": 559.0
	},
	"output.Deviot|Build1462881125.864325":
	{
		"height": 195.0
	},
	"output.Deviot|Build1462881871.949988":
	{
		"height": 675.0
	},
	"output.Deviot|Build1462882171.022803":
	{
		"height": 168.0
	},
	"output.Deviot|Pio_Install1461530035.239933":
	{
		"height": 148.0
	},
	"output.Deviot|Upload1461795970.875452":
	{
		"height": 148.0
	},
	"output.Deviot|Upload1461795983.871091":
	{
		"height": 148.0
	},
	"output.Deviot|Upload1461795999.982857":
	{
		"height": 148.0
	},
	"output.Deviot|Upload1461796219.106787":
	{
		"height": 148.0
	},
	"output.Deviot|Upload1461931973.889951":
	{
		"height": 148.0
	},
	"output.Deviot|Upload1462566230.483122":
	{
		"height": 148.0
	},
	"output.Deviot|Upload1462566262.404987":
	{
		"height": 134.0
	},
	"output.exec":
	{
		"height": 169.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "csarc.sublime-project",
	"replace":
	{
		"height": 94.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 588.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 588.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 225.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
